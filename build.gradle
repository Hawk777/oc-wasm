// Inherit ForgeGradle build script.
buildscript {
	repositories {
		maven {
			url = 'https://maven.minecraftforge.net/'
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:6.+'
	}
}

// Use the Shadow and SpotBugs plugins.
plugins {
	id 'com.github.johnrengelman.shadow' version '8.+'
	id 'com.github.spotbugs' version '4.7.1'
}

// Introduce an additional configuration, which we will use only to hold the
// Asmble configuration and its dependency tree for shadowing.
configurations {
	dependenciesToShadow
}

// Add the OpenComputers Maven repository.
repositories {
	maven {
		url = 'https://maven.cil.li'
	}
}

// Use the ForgeGradle plugin.
apply plugin: 'net.minecraftforge.gradle'

// Set basic properties.
version = '1.12.2-1.0.0'
group = 'ca.chead.oc-wasm'
base {
	archivesName = 'oc-wasm'
}

// Arrange to fill in the metadata in mcmod.info automatically.
processResources {
	duplicatesStrategy = DuplicatesStrategy.INCLUDE
	from(sourceSets.main.resources.srcDirs) {
		include 'mcmod.info'
		expand 'group': project.group, 'version': project.version
	}
}

minecraft {
	// Set version of obfuscation mappings to use.
	mappings channel: 'snapshot', version: '20171003-1.12'
}

// Set dependencies.
dependencies {
	minecraft(group: 'net.minecraftforge', name: 'forge', version: forgeVersion)
	implementation(group: 'li.cil.oc', name: 'OpenComputers', version: opencomputersVersion, classifier: 'api')
	implementation(group: 'org.scala-lang', name: 'scala-library', version: '2.+');
	implementation(group: 'com.github.cretz.asmble', name: 'asmble-compiler', version: asmbleVersion)
	implementation(group: 'org.ow2.asm', name: 'asm-analysis', version: '9.1')
	implementation(group: 'org.ow2.asm', name: 'asm-commons', version: '9.1')
	implementation(group: 'org.ow2.asm', name: 'asm-tree', version: '9.1')
	implementation(group: 'org.ow2.asm', name: 'asm-util', version: '9.1')
	implementation(group: 'co.nstant.in', name: 'cbor', version: '0.9')
	dependenciesToShadow(group: 'com.github.cretz.asmble', name: 'asmble-compiler', version: asmbleVersion)
	dependenciesToShadow(group: 'org.ow2.asm', name: 'asm-analysis', version: '9.1')
	dependenciesToShadow(group: 'org.ow2.asm', name: 'asm-commons', version: '9.1')
	dependenciesToShadow(group: 'org.ow2.asm', name: 'asm-tree', version: '9.1')
	dependenciesToShadow(group: 'org.ow2.asm', name: 'asm-util', version: '9.1')
	dependenciesToShadow(group: 'co.nstant.in', name: 'cbor', version: '0.9')
	spotbugs(group: 'com.github.spotbugs', name: 'spotbugs', version: '4.2.3')
}

// Always compile with Java 1.8; newer versions change the ByteBuffer APIs in
// an incompatible way.
java {
	toolchain {
		languageVersion.set(JavaLanguageVersion.of(8))
	}
}

// Run the Java compiler with -Xlint.
compileJava {
	options.compilerArgs << '-Xlint'
}

// Set options for Javadoc.
javadoc {
	options.docTitle = options.windowTitle = "OC-Wasm ${version}"
	options.links += 'https://docs.oracle.com/javase/8/docs/api/'
	options.overview = 'src/main/java/overview.html'
}

// Configure SpotBugs.
spotbugs {
	toolVersion = '4.7.1'
	excludeFilter = file('.spotbugs-exclude.xml')
}

// A task to bundle used libraries into the output jar, also renaming ASM since
// Asmble wants a substantially different version of it than is shipped with
// Forge itself, so we want to avoid using the one shipped with Forge.
shadowJar {
	// Produce the oc-wasm-<version>-shadowed.jar file.
	archiveClassifier = 'shadowed'

	// Only shadow Asmble and its dependencies, not all of Forge and
	// OpenComputers.
	configurations = [project.configurations.dependenciesToShadow]

	// Some of the dependencies have module-info.class files. These make Forge
	// crash on startup because they are not normal Java classes. Drop them.
	exclude 'module-info.class'

	// Forge ships a copy of ASM. However, Asmbler wants a newer version of ASM
	// than the one shipped with Forge. If left untouched, class loading rules
	// mean that Forgeâ€™s version will be used and the one in the OC-Wasm JAR
	// will be ignored. To allow Asmbler to use the version it wants, relocate
	// it, which renames the package in the OC-Wasm JAR and also all references
	// to it.
	relocate 'org.objectweb.asm', 'ca.chead.ocwasm.relocated.asm'
}

// Create a task to reobfuscate the shadowed JAR (by default only a
// reobfuscate-the-unshadows-JAR task is created).
reobf {
	shadowJar {}
}

// The default task is to build the obfuscated, shadowed JAR.
defaultTasks 'reobfShadowJar'
